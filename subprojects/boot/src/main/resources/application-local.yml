############################################
#### Server
server:
  port: 8080
  servlet:
    encoding:
      charset: UTF-8
      force: true



############################################
####  Spring
spring:
  datasource:
    writer:
      #DEV
      username: postgres
      password: devadmin!
      jdbc-url: jdbc:postgresql://aurora-dev-p18.cluster-c2as9ee4bg3m.ap-northeast-2.rds.amazonaws.com:5432/notify_mylgdb
      minimum-idle: 5
      maximum-pool-size: 5
    reader:
      jdbc-url: jdbc:postgresql://aurora-dev-p18.cluster-ro-c2as9ee4bg3m.ap-northeast-2.rds.amazonaws.com:5432/notify_mylgdb
      username: postgres
      password: devadmin!
      minimum-idle: 5
      maximum-pool-size: 5

  jpa:
    database: postgresql
    hibernate:
      naming:
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
      use-new-id-generator-mappings: false
    properties:
      hibernate:
        temp:
          use_jdbc_metadata_defaults: false
        format_sql: true
        jdbc:
          lob:
            non_contextual_creation: true
    show-sql: true

  #### Cache - Redis
  cache:
    type: redis
  redis:
    cluster:
      nodes: ["redis-dev-iptv-dev-msa-01-0001-001.b4rwjf.0001.apn2.cache.amazonaws.com:6379", "redis-dev-iptv-dev-msa-01-0002-001.b4rwjf.0001.apn2.cache.amazonaws.com:6379"]

  #### Message Stream - Kafka
  kafka:
    bootstrap-servers: b-2.msk-dev-iptv-dev.b1moez.c2.kafka.ap-northeast-2.amazonaws.com:9092,b-6.msk-dev-iptv-dev.b1moez.c2.kafka.ap-northeast-2.amazonaws.com:9092,b-4.msk-dev-iptv-dev.b1moez.c2.kafka.ap-northeast-2.amazonaws.com:9092



############################################
####  Logging
logging:
  level:
    com.lguplus.fleta: DEBUG
    org.hibernate:
      SQL: DEBUG
#      type: DEBUG
#      type.descriptor.sql: DEBUG



############################################
#### Other Domain Application Service
service:
  programming:
    url: http://programming.fleta.com
  searchword:
    url: http://searchword.fleta.com
  settings:
    url: http://settings.fleta.com
  vodlookup:
    url: http://vodlookup.fleta.com
  channel:
    url: http://channel.fleta.com
  personalization:
    url: http://personalization.fleta.com
  subscriber:
    url: http://subscriber.fleta.com



############################################
#### Feign Client 설정
feign:
  client:
    config:
      default:    # 전역 이름
        connectTimeout: 1000
        readTimeout: 1000
      pushannounce: # Push Announce
        connectTimeout: 2000
        #readTimeout: 2000
        loggerLevel: full # NONE, BASIC, HEADERS, FULL
        #defaultRequestHeaders:
        #  header1: header1Value
        requestInterceptors:
          - com.lguplus.fleta.config.PushFeignInterceptor
        errorDecoder: com.lguplus.fleta.provider.rest.PushAnnounceClientImpl.PushErrorDecoder
