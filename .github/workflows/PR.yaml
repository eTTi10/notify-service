name: PR

on:
  pull_request:
    branches: [ develop, release/*, main ]

jobs:
  syncLabels:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.ACTIONS_SECRET }}
          repository: LGUPLUS-IPTV-MSA/msa-boilerplate
          ref: labels

      - uses: micnncim/action-label-syncer@v1
        env:
          GITHUB_TOKEN: ${{ secrets.ACTIONS_SECRET }}
        with:
          manifest: ./labels.yaml

  label:
    needs: syncLabels
    runs-on: ubuntu-latest
    steps:
      - name: Set dev env
        if: ${{ github.base_ref == 'develop' }}
        run: echo "LABEL_NAME=DEV/STP 빌드" >> $GITHUB_ENV

      - name: Set stg env
        if: ${{ startsWith(github.base_ref, 'release/') }}
        run: echo "LABEL_NAME=STG 빌드" >> $GITHUB_ENV

      - name: Set prd env
        if: ${{ github.base_ref == 'main' }}
        run: echo "LABEL_NAME=PRD/SHD 빌드" >> $GITHUB_ENV

      - name: Add label
        run: |
          curl -LX POST "$GITHUB_API_URL/repos/$GITHUB_REPOSITORY/issues/${{ github.event.pull_request.number }}/labels" \
              -H 'Accept: application/vnd.github.v3+json' \
              -H 'Authorization: Bearer ${{ secrets.ACTIONS_SECRET }}' \
              -H 'Content-Type: application/json' \
              -d '{ "labels": ["${{ env.LABEL_NAME }}"] }'

  JaCoCo:
    if: ${{ github.base_ref == 'develop' }}
    runs-on: [ 'self-hosted', 'shared-eks', 'repo' ]
    steps:
      - name: Get app name from repo
        run: echo "APP_NAME=$(echo "$GITHUB_REPOSITORY" | awk -F / '{print $2}' | sed 's/-service$//g')" >> $GITHUB_ENV

      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '11'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run test
        run: SPRING_PROFILES_ACTIVE=tst ./gradlew test -PexcludeTests='**/SwaggerTest'

      - name: Gather Reports
        run: ./gradlew allCoverage

      - name: Generate JaCoCo Badge
        id: jacoco
        uses: cicirello/jacoco-badge-generator@v2.5.0
        with:
          jacoco-csv-file: build/reports/jacoco/allCoverage/allCoverage.csv
          badges-directory: ./report
          colors : '#4c1 #4c1 #4c1 #4c1 #fe7d37 #e05d44'
          intervals: 60 60 60 60 50 0

      - name: Log coverage percentage
        run: |
          echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
          echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"

      - name: Report to Sonarqube
        run: ./gradlew sonarqube -Psonarqube_token="${{ secrets.SONARQUBE_TOKEN }}" --no-daemon

      - name: wget
        run: |
          wget -O ./report/sonar_pass.svg "https://sonarqube.releng.ciptv.uplus.co.kr/api/project_badges/measure?project=com.lguplus.${{ env.APP_NAME }}&metric=alert_status&token=${{secrets.SONARQUBE_TOKEN_APP}}"

      - name: Push
        uses: s0/git-publish-subdir-action@develop
        env:
          REPO: self
          BRANCH: gh-pages
          FOLDER: report
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MESSAGE: "Add Badge and report by Action"